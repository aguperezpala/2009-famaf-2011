#include <stdio.h>

int main (int argc, char **argv)
{
	mechanic_t *m = NULL;
	wm_t *op_machines = NULL,
	     *serv_machines = NULL,
	     *broken_machines = NULL;
	
	parse_args (argc, argv, N, S, Tf, Tr, Nsim);
	
	op_machines	= create_machines (N);
	broken_machines = create_machines (N);
	serv_machines	= create_machines (S);
	m = create_mechanic();
	
	for (i=0 ; i<Nsim ; i++) {
		
		/* TODO reset_structs */
		
		while (no_failure) {
			
			/* Obtener nuevas máquinas rotas */
			--> (arg) broken_machines := punteros a las op_machines que se rompieron ahora
			--> (arg) broken_order := arreglo de enteros con las posiciones de las maquinas rotas
			--> (ret) cantidad de maquinas rotas => ¿fallo del sistema?
			
			/* Reemplazar rotas */
			--> pasar maquinas del mecanico a servicio (S)
			--> pasar maquinas del servicio hacia operativas (N)
			--> pasar maquinas ooperativas a reparación
			
			time++;
		}
	}
	
	get_mean ()
	
	get_next (serv_machines);
	
	return 0;
}








/*
 * TAD mechanic_t	// OPACO
 *
 * int rrt	/* Tiempo absoluto hasta la proxima maquina que sale del taller *
 * GQueue rq	/* Cola de espera de reparacion *
 */


/*
 * TAD wm_t		// TRASPARENTE
 *
 * int nbt	/* Tiempo absoluto hasta la proxima ruptura *
 */


/*
 * Modulo: generador de v.a.
 *
 * INTERFAZ
 * gen_poisson (lambda);
 * gen_exp (lambda);
 * gen_uni_dis (a,b);
 * gen_uni_cont (a,b);
 *
 * INTERNAS
 * ran2 ();
 * mzran13 ();
 *
 */