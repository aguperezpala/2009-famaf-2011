/* # de asientos del tatro */
const N = 2
range NoS = 0..N-1
/* # de terminales conectadas */
const M = 2
range NoT = 0..M-1


/* Un asiento */
SEAT = SEAT[0],
SEAT[j:0..1] = (view[j]      -> SEAT[j]  /* Para que mire la terminal */
               |ctrl_view[j] -> SEAT[j]  /* Para que mire el controlador */
               |when (j==0) take -> SEAT[1]).

/* Usaremos un lock por cada asiento */
LOCK = (acquire -> release -> LOCK).

/* Todos los asientos con sus locks asociados*/
||LOCKED_SEATS = (lock[NoS]:LOCK || seat[NoS]:SEAT).


/* Terminal de un empleado del teatro */
TERMINAL = (seat[i:NoS].view[j:0..1] -> TERMINAL
           |seat[i:NoS].request -> (accepted[i] -> TERMINAL
                                   |rejected[i] -> TERMINAL
                                   )
           ).


/* Administrador de un asiento específico:
 * acepta o rechaza una reserva para dicho asiento */
SEAT_CTRL = (terminal.seat.request -> seat.request -> lock.acquire
                                                   -> seat.view[j:0..1]
                                                   -> if (j==0) then ACCEPT else REJECT),
ACCEPT = (seat.take -> accepted -> QUIT),
REJECT = (             rejected -> QUIT),
QUIT = (lock.release -> SEAT_CTRL).

/* Central que habilita el pedido de reservas de todos los asientos del teatro*/
||CENTRAL = (c[NoS]:SEAT_CTRL).



/* Teatro */
||THEATRE = (  term[NoT]:TERMINAL
            /* Las 'M' terminales comparten la central */
            || term[NoT]::CENTRAL
            /* La central es la única con acceso a los asientos */
            || LOCKED_SEATS
            )

  /{ /* Coordinamos las acciones de la central ... */
     forall[t:NoT] {
         forall[i:NoS] {
             /* ... con las acciones de los asientos */
             seat[i].request / term[t].c[i].seat.request,
             seat[i].take    / term[t].c[i].seat.take,
             lock[i].acquire / term[t].c[i].lock.acquire,
             lock[i].release / term[t].c[i].lock.release,
             forall[j:0..1] {
                 seat[i].ctrl_view[j] / term[t].c[i].seat.view[j]
             },
             /* ... y con las acciones de las terminales */
             term[t].accepted[i] / term[t].c[i].accepted,
	         term[t].rejected[i] / term[t].c[i].rejected,
	         term[t].seat[i].request  / term[t].c[i].terminal.seat.request
         }
     },
     /* Coordinamos la única acción que las terminales  *
      * pueden efectuar directamente sobre los asientos */
     forall[i:NoS] {
          term[t:NoT].seat[i].view / seat[i].view
     }
   }.
